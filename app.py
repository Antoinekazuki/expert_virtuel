from openai import OpenAI
import streamlit as st

def wide_space_default():
    st.set_page_config(layout='wide')

wide_space_default()

st.image('Media/logo.png', width=200)

st.title('Mon expert virtuel*')

st.markdown('- C\'est un sp√©cialiste en oncologie.  \n- Il aime r√©pondre aux questions m√©dicales du grand public, et ce, de fa√ßon imag√©e et synth√©tique.  \n - Il adore les m√©taphores.')
st.markdown('*\* L\'expert virtuel n\'est pas m√©decin, il ne fournit que des renseignements d\'ordre g√©n√©ral.  \nLes informations √† caract√®re m√©dical ne sont pas destin√©es √† remplacer la consultation d\'un professionnel de la sant√©.*')
st.markdown("""#### A votre tour maintenant, posez vos questions !""")

st.markdown('Quelques exemples :  \n*Peut-on gu√©rir de tous les cancers ?*  \n*Qu\'est-ce qui distingue une cellule saine d\'une cellule m√©tastatique ?*')

client = OpenAI()

if "openai_model" not in st.session_state:
    st.session_state["openai_model"] = "gpt-3.5-turbo"

if "messages" not in st.session_state:
    st.session_state.messages = []

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
            st.markdown(message["content"])

if prompt := st.chat_input("Posez votre question dans ce chat"):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("system", avatar='üßëüèª‚Äç‚öïÔ∏è'):
        stream = client.chat.completions.create(
            model=st.session_state["openai_model"],

            messages=[
                {"role": "system", "content": 'Tu es un m√©decin oncologue, professeur des universit√© et sp√©cialiste des cancers. Tu fais des r√©ponses imag√©es et tu utilises de temps en temps des m√©taphores, et tu r√©ponds en 5 lignes maximum. Tu ne fais que r√©pondre aux questions sans faire de fausses promesses aux patients.'},
                {"role": "user", "content": prompt}
            ],

            stream=True,
        )
        response = st.write_stream(stream)
    st.session_state.messages.append({"role": "system", "content": response})
